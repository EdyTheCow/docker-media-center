{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>WIP</p>"},{"location":"dmc-arr/","title":"Arr Stack","text":""},{"location":"dmc-arr/#services","title":"Services","text":"<ul> <li>Jellyfin</li> <li>Transmission</li> <li>Radarr</li> <li>Sonarr</li> <li>Prowlarr</li> <li>Jellyseerr</li> </ul>"},{"location":"dmc-arr/#getting-started","title":"Getting Started","text":"<p>This guide assumes you have a basic knowledge of linux and Docker / Docker Compose.</p>"},{"location":"dmc-arr/#requirements","title":"Requirements","text":"<ul> <li>Domain</li> <li>Docker</li> <li>Docker Compose (Docker Engine now comes with compose)</li> </ul>"},{"location":"dmc-arr/#installation","title":"Installation","text":""},{"location":"dmc-arr/#preparations","title":"Preparations","text":"<p>First we want configure enviroment variables and setup domain records before installing anything. </p> <p>Clone repository</p> <pre><code>git clone https://github.com/EdyTheCow/docker-media-center.git\n</code></pre> <p>Enviroment variables Navigate to <code>dmc/compose/.env/</code> and edit these variables.</p> Variable Default Description COMPOSE_PROJECT_NAME dmc The prefix for all of containers when started from the compose file DOMAIN domain.com The domain that's going to be used to access Jellyfin and rest of the other services DATA_DIR ../data The location where all of media and downloads are going to be stored SERVICES_DIR ../data The location where all of services configs are stored TIMEZONE Europe/Oslo Your timezone, you can find all of the valid timezones here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List ENV_PUID 1000 Your user ID, used for file permissions. You can find it by running command: id ENV_PGUID 1000 Your group ID, used for file permissions. You can find it by running command: id SUB_DOMAIN_X - You can leave these as is unless you want to use different subdomains to access the services. If you change a subdomain, make sure the subdomains match when setting up domain DNS records. <p>Domain DNS records Setting up subdomains for every service, you are free to use whatever subdomain you want as long as it matches the subdomain specified in <code>dmc/compose/.env/</code> file. The example below shows the default values.</p> <p>If you're using Cloudflare, make sure to enable the proxying by enabling the cloud icon. For full end-to-end encryption, you can also enable \"Full\" under the SSL/TLS section in the Cloudflare panel.</p> Sub domain Record Target dmc.domain.com A Your server IP jellyfin.domain.com CNAME dmc.domain.com transmission.domain.com CNAME dmc.domain.com jellyseer.domain.com CNAME dmc.domain.com radarr.domain.com CNAME dmc.domain.com sonarr.domain.com CNAME dmc.domain.com prowlarr.domain.com CNAME dmc.domain.com"},{"location":"dmc-arr/#traefik","title":"Traefik","text":"<p>Set correct acme.json permissions</p> <p>Navigate to <code>_base/data/traefik/</code> and run</p> <pre><code>sudo chmod 600 acme.json\n</code></pre> <p>Basic auth Navigate to <code>_base/data/traefik/.htpasswd</code> and paste your generated user/pass in MD5 format. This will be your basic auth user/pass for most services we're going to set up. If unsure, google how to generate htpasswd.</p> <p>Start docker compose Inside of <code>_base/compose</code> run  <code>docker-compose up -d</code></p>"},{"location":"dmc-arr/#jellyfin","title":"Jellyfin","text":"<p>Inside of <code>dmc/compose</code> run  <code>docker-compose up -d jellyfin</code> Configuration Navigate to <code>jellyfin.domain.com</code> in your browser and follow the instructions. When selecting library folder follow these paths:</p> Library Path Movies /data/media/movies TV Shows /data/media/tvshows <p>Jellyfin only has one volume pointing at <code>/data/media</code> this allows us to add whatever media type we want without having to define extra volumes in docker for future media types. </p>"},{"location":"dmc-arr/#transmission","title":"Transmission","text":"<p>Inside of <code>dmc/compose</code> run  <code>docker-compose up -d transmission</code> Configuration Navigate to <code>transmission.domain.com</code> in your browser, you should be asked to login using the credentials for basic auth you set-up earlier. Under <code>Preferences -&gt; Torrents</code> make sure your download paths look like this: <code>/data/downloads/complete</code> and <code>/data/downloads/incomplete</code>. This will be important later on for hardlinks.</p>"},{"location":"dmc-arr/#radarr","title":"Radarr","text":"<p>Inside of <code>dmc/compose</code> run</p> <p><code>docker-compose up -d radarr</code> Configuration Navigate to <code>radarr.domain.com</code> in your browser, in the panel under <code>Media Management</code> section and add the root folder by simply selecting <code>/data/media/movies</code> directory.</p> <p>Under <code>Download Clients</code> add a new client by selecting Transmission. Change these settings:</p> Setting Value Name Transmission Host transmission Category movies <p>Host <code>transmission</code> will resolve the local IP of the container, do not use a domain or public IP. It's more convenient and secure to connect services locally. Since the connection is local, you do not need to insert any other credentials. Click <code>Test</code> to make sure it works and add the client.</p>"},{"location":"dmc-arr/#sonarr","title":"Sonarr","text":"<p>Inside of <code>dmc/compose</code> run  <code>docker-compose up -d sonarr</code></p> <p>Configuration Navigate to <code>sonarr.domain.com</code> in your browser, in the panel under <code>Media Management</code> section and add the root folder by simply selecting <code>/data/media/tvshows</code> directory.</p> <p>Under <code>Download Clients</code> add new client by selecting Transmission. Change these settings:</p> Setting Value Name Transmission Host transmission Category tvshows <p>Host <code>transmission</code> will resolve the local IP of the container, do not use a domain or public IP. It's more convenient and secure to connect services locally. Since the connection is local, you do not need to insert any other credentials. Click <code>Test</code> to make sure it works and add the client.</p>"},{"location":"dmc-arr/#prowlarr","title":"Prowlarr","text":"<p>Inside of <code>dmc/compose</code> run  <code>docker-compose up -d prowlarr</code> Configuration Navigate to <code>prowlarr.domain.com</code> in your browser, under <code>Settings -&gt; Apps</code> add Sonarr and Radarr. </p> Setting Value Name Radarr Sync Level Full Sync Prowlarr Server http://prowlarr:9696 Radarr Server http://radarr:7878 <p>Instructions for adding Sonarr are exactly the same, just change the name to <code>Sonarr</code> and use <code>http://sonarr:8989</code> for <code>Sonarr Server</code>. You'll find API keys for both under <code>Settings -&gt; General</code> in their respective panels.</p> <p>Navigate to <code>Indexers</code> and click <code>Add Indexer</code> to add public or private indexers. Once added, these will automatically sync with Sonarr and Radarr. </p>"},{"location":"dmc-arr/#jellyseerr","title":"Jellyseerr","text":"<p>Inside of <code>dmc/compose</code> run  <code>docker-compose up -d jellyseerr</code></p> <p>Configuration  Navigate to <code>jellyseerr.domain.com</code> in your browser, select option to use <code>Jellyfin account</code> and proceed by providing url and account details for your jellyfin installation. Scan and enable libraries.</p> <p>Adding radarr / sonarr Most importantly, do not use the actual url or IP of radarr / sonarr. Simply use <code>radarr</code> or <code>sonarr</code> for the hostname. This will resolve the local IP of the container rather than the public one. Since we're running everything on the same server, it's more secure and convenient to connect these services locally. Make sure to uncheck <code>Use SSL</code> option too for the local connection to work.</p> <p>Below are the important settings you should edit, the instructions for sonarr are exactly the same. Just make sure to replace <code>radarr</code> with <code>sonarr</code> and you should be good to go.</p> Setting Value Default Server Checked Server Name Radarr Hostname or IP Address radarr Use SSL Unchecked API Key Can be found under General section in radarr / sonarr panel"},{"location":"dmc-riven/","title":"Riven","text":"<p>WIP</p>"},{"location":"installation/","title":"Installation","text":"<p>WIP</p>"}]}